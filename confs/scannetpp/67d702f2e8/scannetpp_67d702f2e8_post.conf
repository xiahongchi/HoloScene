train{
    expname = holoscene_scannetpp_67d702f2e8_gt_mask
    dataset_class = datasets.ns_dataset.NSDataset
    model_class = model.network.HoloSceneNetwork
    loss_class = model.loss.HoloSceneLoss
    learning_rate = 5.0e-4
    lr_factor_for_grid = 20.0
    num_pixels = 1024
    checkpoint_freq = 50
    plot_freq = 50
    split_n_pixels = 1024
    add_objectvio_iter = 25000
    max_total_iters = 200000
}
plot{
    plot_nimgs = 1
    resolution = 512
    grid_boundary = [-1.0, 1.0]
}
wandb{
    project_name = holoscene
}
loss{
    rgb_loss = torch.nn.L1Loss
    eikonal_weight = 0.1
    smooth_weight = 0.005
    depth_weight = 0.5
    normal_l1_weight = 0.05
    normal_cos_weight = 0.05
    semantic_loss = torch.nn.MSELoss
    use_obj_opacity = True
    semantic_weight = 1.0
    reg_vio_weight = 20.0
    bg_reg_weight = 0.01
    depth_type = marigold
}
dataset{
    data_root_dir = ./data_dir/scannetpp/
    data_dir = 67d702f2e8
    img_res = [584, 876]
    test_split = True
    fix_length = 100
}
invis_loss{
    lambda_nm_l1 = 25.0
    lambda_nm_cos = 25.0
    lambda_rgb = 2.0
    lambda_mask = 5.0
    lambda_depth = 20.0
    lambda_smooth = 0.5
    lambda_lama_rgb = 2.0
    lambda_lama_nm_l1 = 20.0
    lambda_lama_nm_cos = 20.0
    num_rays = 1024
    bg_nm_l1 = 25.0
    bg_nm_cos = 25.0
}
model{
    feature_vector_size = 256
    scene_bounding_sphere = 1.0
    use_bg_reg = False
    render_bg_iter = 1
    
    Grid_MLP = True

    implicit_network
    {
        d_in = 3
        d_out = 32
        dims = [256, 256]
        geometric_init = True
        bias = 0.9
        skip_in = [4]
        weight_norm = True
        multires = 6
        inside_outside = True
        use_grid_feature = True
        divide_factor = 1.0
        sigmoid = 10
        color_grid_feature = True
    }

    rendering_network
    {
        mode = idr 
        d_in = 9 
        d_out = 3                       # 3 for rgb
        dims = [256, 256]
        weight_norm = True
        multires_view = 4
        multires_point = 4
        multires_normal = 4
    }
    density
    {
        params_init{
            beta = 0.1
        }
        beta_min = 0.0001
    }
    ray_sampler
    {
        near = 0.0
        N_samples = 64 
        N_samples_eval = 128 
        N_samples_extra = 32 
        eps = 0.1
        beta_iters = 10
        max_total_iters = 5
    }
}
